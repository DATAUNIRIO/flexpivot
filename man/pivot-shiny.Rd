% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny.R
\name{pivot-shiny}
\alias{pivot-shiny}
\alias{pivotOutput}
\alias{renderPivot}
\title{Pivot table Output in Shiny}
\usage{
pivotOutput(outputId, width = "100\%", ...)

renderPivot(
  expr,
  width = 1,
  background = "#81A1C1",
  border = "#FFFFFF",
  fontSize = 14,
  labels = pivot_labels(),
  formatter = pivot_formatter(),
  env = parent.frame(),
  quoted = FALSE
)
}
\arguments{
\item{outputId}{Output variable to read from.}

\item{width}{Value of the preferred width of the table in percent (\code{[0,1]}).}

\item{...}{Other arguments to pass to the container tag function.
This is useful for providing additional classes for the tag.}

\item{expr}{An expression that generates a \code{\link{pivot_table}}.}

\item{background}{Background color.}

\item{border}{Border color (applies to all table).}

\item{fontSize}{Font size (applies to all table).}

\item{labels}{Custom labels for statistics, see \code{\link{pivot_labels}}.}

\item{formatter}{Function to format content, see \code{\link{pivot_formatter}}.}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
is useful if you want to save an expression in a variable.}
}
\value{
An HTML output element that can be included in Shiny UI.
}
\description{
Pivot table Output in Shiny
}
\examples{

library(shiny)
library(flexpivot)
data("diamonds", package = "ggplot2")

ui <- fluidPage(
  tags$h2("Pivot table in Shiny"),
  fluidRow(
    column(
      width = 6,
      selectInput(
        inputId = "row",
        label = "Row",
        choices = c("cut", "color", "clarity")
      )
    ),
    column(
      width = 6,
      selectInput(
        inputId = "col",
        label = "Col",
        choices = c("cut", "color", "clarity"),
        selected = "color"
      )
    )
  ),
  pivotOutput("pivot")
)

server <- function(input, output, session) {

  output$pivot <- renderPivot({
    pivot_table(diamonds, input$row, input$col)
  })

}

if (interactive())
  shinyApp(ui, server)
}
